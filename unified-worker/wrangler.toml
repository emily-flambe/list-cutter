name = "list-cutter"
main = "src/index.ts"
compatibility_date = "2024-12-30"
compatibility_flags = ["nodejs_compat"]

# Enable versioning and gradual deployments
[version_metadata]
enable_versions = true

# Frontend static assets
[assets]
directory = "./public"
binding = "ASSETS"

# Development configuration
[dev]
port = 8788
local_protocol = "http"
ip = "127.0.0.1"

# Build configuration
[build]
command = "npm run build:worker"

# Development environment
[vars]
ENVIRONMENT = "development"
API_VERSION = "v1"
CORS_ORIGIN = "http://localhost:5173"
MAX_FILE_SIZE = "52428800"
JWT_ISSUER = "list-cutter"
JWT_AUDIENCE = "list-cutter-api"
LOG_LEVEL = "debug"

# Development bindings
[[d1_databases]]
binding = "DB"
database_name = "list-cutter-dev"
database_id = "fc5af020-09f2-4235-8a47-590140e8ad74"
migrations_dir = "./migrations"

[[r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "list-cutter-files-dev"
preview_bucket_name = "list-cutter-files-preview"

[[kv_namespaces]]
binding = "AUTH_TOKENS"
id = "061bd8c2dc2e4616b3eaadd17248eb43"
preview_id = "6d9f7f3782074462b90513852cdf20f6"

# Queue bindings (for async processing)
[[queues.producers]]
binding = "CSV_QUEUE"
queue = "csv-processing"

[[queues.consumers]]
queue = "csv-processing"

# Analytics Engine binding
[[analytics_engine_datasets]]
binding = "ANALYTICS"
dataset = "list_cutter_analytics"

# Rate limiting
[[unsafe.bindings]]
name = "RATE_LIMITER"
type = "ratelimit"
namespace_id = "1"
simple = { limit = 100, period = 60 }

# Staging environment
[env.staging]
name = "list-cutter-staging"
vars = { 
  ENVIRONMENT = "staging",
  API_VERSION = "v1",
  CORS_ORIGIN = "https://staging.list-cutter.com",
  MAX_FILE_SIZE = "52428800",
  JWT_ISSUER = "list-cutter",
  JWT_AUDIENCE = "list-cutter-api",
  LOG_LEVEL = "info",
  SENTRY_ENVIRONMENT = "staging"
}

# Staging domain for testing
routes = [
  { pattern = "staging.list-cutter.com/*", zone_name = "list-cutter.com" }
]

[[env.staging.d1_databases]]
binding = "DB"
database_name = "list-cutter-staging"
database_id = "24c83d4f-09e8-4d0c-80bc-ac5c19a999cf"

[[env.staging.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "list-cutter-files-staging"

[[env.staging.kv_namespaces]]
binding = "AUTH_TOKENS"
id = "061bd8c2dc2e4616b3eaadd17248eb43"

# Production environment
[env.production]
name = "list-cutter-production"
vars = { 
  ENVIRONMENT = "production",
  API_VERSION = "v1",
  CORS_ORIGIN = "https://list-cutter.com",
  MAX_FILE_SIZE = "52428800",
  JWT_ISSUER = "list-cutter",
  JWT_AUDIENCE = "list-cutter-api",
  LOG_LEVEL = "info",
  SENTRY_ENVIRONMENT = "production"
}

# Single domain for entire application
routes = [
  { pattern = "list-cutter.com/*", zone_name = "list-cutter.com" },
  { pattern = "www.list-cutter.com/*", zone_name = "list-cutter.com" }
]

# Production bindings
[[env.production.d1_databases]]
binding = "DB"
database_name = "list-cutter-production"
database_id = "PRODUCTION_DB_ID"

[[env.production.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "list-cutter-files-production"

[[env.production.kv_namespaces]]
binding = "AUTH_TOKENS"
id = "PRODUCTION_KV_ID"

# Rate limiting for production
[[env.production.unsafe.bindings]]
name = "RATE_LIMITER"
type = "ratelimit"
namespace_id = "1"
simple = { limit = 100, period = 60 }