name = "cutty"
routes = [
  { pattern = "cutty.emilycogsdill.com/*", zone_name = "emilycogsdill.com" }
]
main = "src/index.ts"
compatibility_date = "2024-12-30"
compatibility_flags = ["nodejs_compat"]
workers_dev = true

# Asset configuration for serving frontend
[assets]
directory = "../../app/frontend/dist"
binding = "ASSETS"

# Enable Wrangler logs (v3.88.0+)
[observability.logs]
enabled = true

# Enable versioning and gradual deployments
# [version_metadata]
# enable_versions = true

# Development configuration
[dev]
port = 8788
local_protocol = "http"
ip = "127.0.0.1"

# Build configuration - optimized for faster deployment
[build]
command = "npm run build"
cwd = "."
watch_dir = "src"

# Upload optimization
upload_source_maps = false
minify = true

# Environment variables (non-sensitive)
[vars]
ENVIRONMENT = "development"
API_VERSION = "v1"
CORS_ORIGIN = "https://cutty.emilycogsdill.com"
MAX_FILE_SIZE = "52428800" # 50MB in bytes
JWT_ISSUER = "cutty"
JWT_AUDIENCE = "cutty"
SECURITY_PERFORMANCE_THRESHOLD = "100"
SECURITY_METRICS_RETENTION_DAYS = "30"
SECURITY_ENABLE_REAL_TIME_MONITORING = "true"
# Secrets are now managed via Cloudflare Workers secrets
# JWT_SECRET and API_KEY_SALT are set via: wrangler secret put [SECRET_NAME]
# These secrets are automatically available to the worker at runtime

# D1 Database bindings
[[d1_databases]]
binding = "DB"
database_name = "cutty-dev"
database_id = "624214be-77a6-4501-b4c7-69b394084081"
migrations_dir = "./migrations"
migrations_table = "d1_migrations"

# Backup D1 Database (Cross-region) - TODO: Create actual backup database
# [[d1_databases]]
# binding = "BACKUP_DATABASE"
# database_name = "cutty-backup-dev"
# database_id = "backup-db-id-placeholder"

# R2 Storage bindings
[[r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "cutty-files-dev"
preview_bucket_name = "cutty-files-dev"

# Backup R2 Storage (Cross-region) - TODO: Create actual backup bucket
# [[r2_buckets]]
# binding = "BACKUP_STORAGE"
# bucket_name = "cutty-backup-dev"
# preview_bucket_name = "cutty-backup-dev"

# Security KV Namespaces (Development)
[[kv_namespaces]]
binding = "CUTTY_SECURITY_CONFIG"
id = "a6973edd26304221934017997dbd147e"
preview_id = "a6973edd26304221934017997dbd147e"

[[kv_namespaces]]
binding = "CUTTY_SECURITY_EVENTS"
id = "e696502dea8942a8acb47e2ac474e248"
preview_id = "e696502dea8942a8acb47e2ac474e248"

[[kv_namespaces]]
binding = "CUTTY_SECURITY_METRICS"
id = "805adc47af9c4e8aa7ddf5b412ea3083"
preview_id = "805adc47af9c4e8aa7ddf5b412ea3083"

[[kv_namespaces]]
binding = "CUTTY_QUOTA_TRACKING"
id = "4c1a53aaab2846a3b11ee39416e6b1dd"
preview_id = "4c1a53aaab2846a3b11ee39416e6b1dd"

# Backup Configuration KV Namespace - TODO: Create actual KV namespace
# [[kv_namespaces]]
# binding = "BACKUP_CONFIG"
# id = "backup-config-kv-id-placeholder"
# preview_id = "backup-config-kv-id-placeholder"

# Performance Optimization Cache KV Namespace - Issue #69 - TODO: Create actual KV namespace
# [[kv_namespaces]]
# binding = "CACHE_KV"
# id = "performance-cache-kv-id-placeholder"
# preview_id = "performance-cache-kv-id-placeholder"

# Phase 8 Deployment KV Namespace - For blue-green deployment state management
# TODO: Create actual KV namespace for deployment management
# [[kv_namespaces]]
# binding = "DEPLOYMENT_KV"
# id = "deployment-state-kv-id-placeholder"
# preview_id = "deployment-state-kv-id-placeholder"

# AUTH_KV namespace for JWT token storage and blacklisting
[[kv_namespaces]]
binding = "AUTH_KV"
id = "c490355daf9b4b84b484303d08c42eb2"
preview_id = "c490355daf9b4b84b484303d08c42eb2"

# Analytics Engine binding - Required for monitoring
[[analytics_engine_datasets]]
binding = "ANALYTICS"
dataset = "cutty-metrics"

# Cron triggers configured using wrangler CLI after deployment
# Due to API parsing issues with complex cron configs in wrangler.toml,
# these will be set up separately using: wrangler triggers deploy

# Staging environment - same worker, different routes and vars
[env.staging]
[env.staging.vars]
ENVIRONMENT = "staging"
API_VERSION = "v1"
CORS_ORIGIN = "https://cutty-staging.emilycogsdill.com"
MAX_FILE_SIZE = "52428800"
JWT_ISSUER = "cutty"
JWT_AUDIENCE = "cutty"
SECURITY_PERFORMANCE_THRESHOLD = "100"
SECURITY_METRICS_RETENTION_DAYS = "30"
SECURITY_ENABLE_REAL_TIME_MONITORING = "true"
# Staging secrets managed via: wrangler secret put [SECRET_NAME] --env staging

[[env.staging.routes]]
pattern = "cutty-staging.emilycogsdill.com/*"
zone_name = "emilycogsdill.com"

# Queue bindings for CSV processing (commented out - create queue first)
# [[queues.producers]]
# binding = "CSV_QUEUE"
# queue = "csv-processing"

# Analytics Engine binding for metrics collection (commented out for debugging)
# [[analytics_engine_datasets]]
# binding = "ANALYTICS"
# dataset = "cutty_analytics"

# Staging D1 Database
[[env.staging.d1_databases]]
binding = "DB"
database_name = "cutty-staging"
database_id = "e16924c6-be97-4012-88ac-79ff31fd5304"

[[env.staging.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "cutty-files-staging"
preview_bucket_name = "cutty-files-preview"

[[env.staging.analytics_engine_datasets]]
binding = "ANALYTICS"
dataset = "cutty-metrics-staging"

# Copy KV namespaces for staging
[[env.staging.kv_namespaces]]
binding = "CUTTY_SECURITY_CONFIG"
id = "a6973edd26304221934017997dbd147e"
preview_id = "a6973edd26304221934017997dbd147e"

[[env.staging.kv_namespaces]]
binding = "CUTTY_SECURITY_EVENTS"
id = "e696502dea8942a8acb47e2ac474e248"
preview_id = "e696502dea8942a8acb47e2ac474e248"

[[env.staging.kv_namespaces]]
binding = "CUTTY_SECURITY_METRICS"
id = "805adc47af9c4e8aa7ddf5b412ea3083"
preview_id = "805adc47af9c4e8aa7ddf5b412ea3083"

[[env.staging.kv_namespaces]]
binding = "CUTTY_QUOTA_TRACKING"
id = "4c1a53aaab2846a3b11ee39416e6b1dd"
preview_id = "4c1a53aaab2846a3b1dd"

[[env.staging.kv_namespaces]]
binding = "AUTH_KV"
id = "c490355daf9b4b84b484303d08c42eb2"
preview_id = "c490355daf9b4b84b484303d08c42eb2"


# Service bindings will be configured when needed
# Future service configuration will go here

# Rate limiting rules (commented out - need to configure proper rate limiting)
# Future rate limiting configuration will go here when needed
