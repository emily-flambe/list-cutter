name = "list-cutter-api"
main = "src/index.ts"
compatibility_date = "2024-12-30"
compatibility_flags = ["nodejs_compat"]
workers_dev = true

# Enable versioning and gradual deployments
[version_metadata]
enable_versions = true

# Development configuration
[dev]
port = 8788
local_protocol = "http"
ip = "127.0.0.1"

# Build configuration
[build]
command = "npm run build"

# Environment variables (non-sensitive)
[vars]
ENVIRONMENT = "development"
API_VERSION = "v1"
CORS_ORIGIN = "http://localhost:5173"
MAX_FILE_SIZE = "52428800" # 50MB in bytes
JWT_ISSUER = "list-cutter"
JWT_AUDIENCE = "list-cutter-api"

# D1 Database bindings (commented out - create your own database and update ID)
# [[d1_databases]]
# binding = "DB"
# database_name = "cutty-dev"
# database_id = "your-database-id-here"
# migrations_dir = "./migrations"

# R2 Storage bindings
[[r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "cutty-files-prod"
preview_bucket_name = "cutty-files-preview"

# KV Namespace bindings (commented out - create your own KV namespace and update ID)
# [[kv_namespaces]]
# binding = "AUTH_TOKENS"
# id = "your-kv-namespace-id-here"
# preview_id = "your-preview-kv-namespace-id-here"

# Queue bindings (commented out - create your own queue and update name)
# [[queues.producers]]
# binding = "CSV_QUEUE"
# queue = "csv-processing"

# [[queues.consumers]]
# queue = "csv-processing"
# max_batch_size = 10
# max_batch_timeout = 5

# Analytics Engine binding (commented out - create your own dataset and update name)
# [[analytics_engine_datasets]]
# binding = "ANALYTICS"
# dataset = "cutty_analytics"

# Staging environment
[env.staging]
name = "list-cutter-api-staging"
vars = { ENVIRONMENT = "staging", CORS_ORIGIN = "https://staging.list-cutter.com" }

# [[env.staging.d1_databases]]
# binding = "DB"
# database_name = "cutty-staging"
# database_id = "your-staging-database-id-here"

[[env.staging.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "cutty-files-preview"
preview_bucket_name = "cutty-files-dev"

# [[env.staging.kv_namespaces]]
# binding = "AUTH_TOKENS"
# id = "your-staging-kv-namespace-id-here"

# Production environment
[env.production]
name = "list-cutter-api-production"
vars = { ENVIRONMENT = "production", CORS_ORIGIN = "https://list-cutter.com" }
routes = [
  { pattern = "api.list-cutter.com/*", zone_name = "list-cutter.com" }
]

# [[env.production.d1_databases]]
# binding = "DB"
# database_name = "cutty-production"
# database_id = "your-production-database-id-here"

[[env.production.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "cutty-files-prod"
preview_bucket_name = "cutty-files-preview"

# [[env.production.kv_namespaces]]
# binding = "AUTH_TOKENS"
# id = "your-production-kv-namespace-id-here"

# Service bindings for microservices architecture (future)
# [[services]]
# binding = "AUTH_SERVICE"
# service = "list-cutter-auth"

# Rate limiting rules (commented out - need to configure proper rate limiting)
# [[unsafe.bindings]]
# binding = "RATE_LIMITER"
# type = "ratelimit"
# namespace_id = "1"
# simple = { limit = 100, period = 60 }