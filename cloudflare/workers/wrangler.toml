name = "cutty-api"
routes = [
  { pattern = "cutty-api.emilycogsdill.com/*", zone_name = "emilycogsdill.com" }
]
main = "src/index.ts"
compatibility_date = "2024-12-30"
compatibility_flags = ["nodejs_compat"]
workers_dev = true

# Enable versioning and gradual deployments
# [version_metadata]
# enable_versions = true

# Development configuration
[dev]
port = 8788
local_protocol = "http"
ip = "127.0.0.1"

# Build configuration - using wrangler's built-in TypeScript compilation

# Environment variables (non-sensitive)
[vars]
ENVIRONMENT = "development"
API_VERSION = "v1"
CORS_ORIGIN = "https://cutty.emilycogsdill.com"
MAX_FILE_SIZE = "52428800" # 50MB in bytes
JWT_ISSUER = "cutty"
JWT_AUDIENCE = "cutty-api"
SECURITY_PERFORMANCE_THRESHOLD = "100"
SECURITY_METRICS_RETENTION_DAYS = "30"
SECURITY_ENABLE_REAL_TIME_MONITORING = "true"

# D1 Database bindings
[[d1_databases]]
binding = "DB"
database_name = "cutty-dev"
database_id = "2f87e313-31ff-4298-ab18-552fa5a1ce0e"
migrations_dir = "./migrations"

# R2 Storage bindings
[[r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "cutty-files-dev"
preview_bucket_name = "cutty-files-dev"

# Security KV Namespaces (Development)
[[kv_namespaces]]
binding = "CUTTY_SECURITY_CONFIG"
id = "a6973edd26304221934017997dbd147e"
preview_id = "a6973edd26304221934017997dbd147e"

[[kv_namespaces]]
binding = "CUTTY_SECURITY_EVENTS"
id = "e696502dea8942a8acb47e2ac474e248"
preview_id = "e696502dea8942a8acb47e2ac474e248"

[[kv_namespaces]]
binding = "CUTTY_SECURITY_METRICS"
id = "805adc47af9c4e8aa7ddf5b412ea3083"
preview_id = "805adc47af9c4e8aa7ddf5b412ea3083"

[[kv_namespaces]]
binding = "CUTTY_QUOTA_TRACKING"
id = "4c1a53aaab2846a3b11ee39416e6b1dd"
preview_id = "4c1a53aaab2846a3b11ee39416e6b1dd"

[[kv_namespaces]]
binding = "AUTH_TOKENS"
id = "your-auth-tokens-kv-namespace-id-here"
preview_id = "your-auth-tokens-kv-namespace-id-here"

# Analytics Engine binding (temporarily commented out for debugging)
# [[analytics_engine_datasets]]
# binding = "ANALYTICS"
# dataset = "cutty-metrics"

# Cron triggers for storage metrics aggregation (temporarily commented out for debugging)
# # Daily aggregation at 2 AM UTC
# [[triggers.crons]]
# cron = "0 2 * * *"
# endpoint = "/api/metrics/jobs/daily-aggregation"

# # Daily snapshots at 1 AM UTC
# [[triggers.crons]]
# cron = "0 1 * * *"
# endpoint = "/api/metrics/jobs/update-daily-snapshots"

# # Weekly aggregation every Monday at 3 AM UTC
# [[triggers.crons]]
# cron = "0 3 * * 1"
# endpoint = "/api/metrics/jobs/weekly-aggregation"

# # Monthly aggregation on 1st of month at 4 AM UTC
# [[triggers.crons]]
# cron = "0 4 1 * *"
# endpoint = "/api/metrics/jobs/monthly-aggregation"

# # Cleanup old metrics every Sunday at 5 AM UTC
# [[triggers.crons]]
# cron = "0 5 * * 0"
# endpoint = "/api/metrics/jobs/cleanup-old-metrics"

# # Metrics health check every 5 minutes
# [[triggers.crons]]
# cron = "*/5 * * * *"
# endpoint = "/api/metrics/jobs/health-check"

# # Alert system cron triggers
# # Alert evaluation every 5 minutes
# [[triggers.crons]]
# cron = "*/5 * * * *"
# endpoint = "/api/alerts/jobs/evaluate"

# # Retry failed notifications every 15 minutes
# [[triggers.crons]]
# cron = "*/15 * * * *"
# endpoint = "/api/alerts/jobs/retry-notifications"

# # Alert cleanup daily at 3 AM UTC
# [[triggers.crons]]
# cron = "0 3 * * *"
# endpoint = "/api/alerts/jobs/cleanup"

# # Alert health check every 10 minutes
# [[triggers.crons]]
# cron = "*/10 * * * *"
# endpoint = "/api/alerts/jobs/health-check"

# Staging environment
[env.staging]
name = "cutty-api-staging"
vars = { ENVIRONMENT = "staging", CORS_ORIGIN = "https://staging.cutty.emilycogsdill.com" }
routes = [
  { pattern = "cutty-api-staging.emilycogsdill.com/*", zone_name = "emilycogsdill.com" }
]

# Queue bindings for CSV processing (commented out - create queue first)
# [[queues.producers]]
# binding = "CSV_QUEUE"
# queue = "csv-processing"

# Analytics Engine binding for metrics collection (commented out for debugging)
# [[analytics_engine_datasets]]
# binding = "ANALYTICS"
# dataset = "cutty_analytics"

[[env.staging.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "cutty-files-staging"
preview_bucket_name = "cutty-files-preview"

# [[env.staging.analytics_engine_datasets]]
# binding = "ANALYTICS"
# dataset = "cutty-metrics-staging"

# KV configuration for staging will be added when needed

# Production environment
[env.production]
name = "cutty-api-production"
vars = { ENVIRONMENT = "production", CORS_ORIGIN = "https://cutty.emilycogsdill.com" }
routes = [
  { pattern = "cutty-api.emilycogsdill.com/*", zone_name = "emilycogsdill.com" }
]

[[env.production.d1_databases]]
binding = "DB"
database_name = "cutty-production"
database_id = "0a6c6836-02e8-4f91-a37a-7eb82aa58e0f"

[[env.production.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "cutty-files-prod"
preview_bucket_name = "cutty-files-dev"

# [[env.production.analytics_engine_datasets]]
# binding = "ANALYTICS"
# dataset = "cutty-metrics-production"

# KV configuration for production will be added when needed

# Service bindings will be configured when needed
# Future service configuration will go here

# Rate limiting rules (commented out - need to configure proper rate limiting)
# Future rate limiting configuration will go here when needed
