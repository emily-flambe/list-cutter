name = "list-cutter-api"
main = "src/index.ts"
compatibility_date = "2024-12-30"
compatibility_flags = ["nodejs_compat"]
workers_dev = true

# Development configuration
[dev]
port = 8788
local_protocol = "http"
ip = "127.0.0.1"

# Build configuration
[build]
command = "npm run build"

# Environment variables (non-sensitive)
[vars]
ENVIRONMENT = "development"
API_VERSION = "v1"
CORS_ORIGIN = "http://localhost:5173"
MAX_FILE_SIZE = "52428800" # 50MB in bytes
JWT_ISSUER = "list-cutter"
JWT_AUDIENCE = "list-cutter-api"

# D1 Database bindings
[[d1_databases]]
binding = "DB"
database_name = "list-cutter-dev"
database_id = "fc5af020-09f2-4235-8a47-590140e8ad74"
migrations_dir = "./migrations"

# R2 Storage bindings
[[r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "list-cutter-files-dev"
preview_bucket_name = "list-cutter-files-preview"

# KV Namespace bindings (for JWT refresh tokens)
[[kv_namespaces]]
binding = "AUTH_TOKENS"
id = "061bd8c2dc2e4616b3eaadd17248eb43"
preview_id = "6d9f7f3782074462b90513852cdf20f6"

# Queue bindings (for async processing)
[[queues.producers]]
binding = "CSV_QUEUE"
queue = "csv-processing"

[[queues.consumers]]
queue = "csv-processing"

# Analytics Engine binding
[[analytics_engine_datasets]]
binding = "ANALYTICS"
dataset = "list_cutter_analytics"

# Staging environment
[env.staging]
name = "list-cutter-api-staging"
vars = { ENVIRONMENT = "staging", CORS_ORIGIN = "https://staging.list-cutter.com" }

[[env.staging.d1_databases]]
binding = "DB"
database_name = "list-cutter-staging"
database_id = "24c83d4f-09e8-4d0c-80bc-ac5c19a999cf"

[[env.staging.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "list-cutter-files-staging"

[[env.staging.kv_namespaces]]
binding = "AUTH_TOKENS"
id = "061bd8c2dc2e4616b3eaadd17248eb43"

# Production environment
[env.production]
name = "list-cutter-api-production"
vars = { ENVIRONMENT = "production", CORS_ORIGIN = "https://list-cutter.com" }
routes = [
  { pattern = "api.list-cutter.com/*", zone_name = "list-cutter.com" }
]

[[env.production.d1_databases]]
binding = "DB"
database_name = "list-cutter-production"
database_id = "5b9922e8-aa87-445d-ac77-a2137234f6d3"

[[env.production.r2_buckets]]
binding = "FILE_STORAGE"
bucket_name = "list-cutter-files-production"

[[env.production.kv_namespaces]]
binding = "AUTH_TOKENS"
id = "061bd8c2dc2e4616b3eaadd17248eb43"

# Service bindings for microservices architecture (future)
# [[services]]
# binding = "AUTH_SERVICE"
# service = "list-cutter-auth"

# Rate limiting rules
[[unsafe.bindings]]
name = "RATE_LIMITER"
type = "ratelimit"
namespace_id = "1"
simple = { limit = 100, period = 60 }