# Pre-commit hooks configuration
# Enforces quality gates before commits are made

repos:
  # Prettier code formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        name: Format code with Prettier
        entry: prettier --write
        language: node
        files: \.(ts|js|json|md|yml|yaml)$
        args: [--config, .prettierrc]

  # ESLint for TypeScript/JavaScript
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        name: Lint TypeScript/JavaScript
        entry: eslint
        language: node
        files: \.(ts|js)$
        args: [--fix, --ext, .ts,.js]
        additional_dependencies:
          - typescript@^5.6.3
          - '@typescript-eslint/eslint-plugin@^8.14.0'
          - '@typescript-eslint/parser@^8.14.0'

  # TypeScript type checking
  - repo: local
    hooks:
      - id: typescript-check
        name: TypeScript type check
        entry: npx tsc --noEmit
        language: system
        files: \.(ts)$
        pass_filenames: false

  # Security vulnerability scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json

  # Generic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File format checks
      - id: check-json
        name: Check JSON syntax
      - id: check-yaml
        name: Check YAML syntax
      - id: check-toml
        name: Check TOML syntax
      
      # File content checks
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1024']
      - id: check-case-conflict
        name: Check for case conflicts
      
      # Line ending and whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: trailing-whitespace
        name: Trim trailing whitespace
        args: [--markdown-linebreak-ext=md]
      - id: mixed-line-ending
        name: Fix mixed line endings
        args: ['--fix=lf']

  # Security scanning with Bandit (for any Python scripts)
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Security scan with Bandit
        args: ['-r', '-f', 'json', '-o', 'bandit-report.json']
        files: \.py$

  # Dependency vulnerability scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        name: Check Python dependencies for vulnerabilities

  # Custom hooks for Node.js/TypeScript projects
  - repo: local
    hooks:
      # Run unit tests before commit
      - id: run-unit-tests
        name: Run unit tests
        entry: npm run test:unit
        language: system
        pass_filenames: false
        stages: [commit]

      # Check test coverage
      - id: check-coverage
        name: Check test coverage
        entry: bash -c 'npm run test:coverage && node scripts/check-coverage.js'
        language: system
        pass_filenames: false
        stages: [commit]

      # Security tests
      - id: run-security-tests
        name: Run security tests
        entry: npm run test:security
        language: system
        pass_filenames: false
        stages: [commit]

      # Bundle size check
      - id: check-bundle-size
        name: Check bundle size
        entry: bash -c 'npm run build && node scripts/check-bundle-size.js'
        language: system
        pass_filenames: false
        stages: [commit]

      # Package audit
      - id: npm-audit
        name: NPM security audit
        entry: npm audit --audit-level moderate
        language: system
        pass_filenames: false
        stages: [commit]

      # License compliance check
      - id: license-check
        name: Check license compliance
        entry: npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;CC0-1.0'
        language: system
        pass_filenames: false
        stages: [commit]

      # Validate wrangler configuration
      - id: validate-wrangler
        name: Validate Wrangler config
        entry: npx wrangler types --local
        language: system
        files: wrangler.toml
        pass_filenames: false

      # Check for TODO/FIXME comments in production code
      - id: check-todos
        name: Check for TODO/FIXME comments
        entry: bash -c 'if grep -r "TODO\|FIXME\|XXX\|HACK" src/ --include="*.ts" --include="*.js"; then echo "Found TODO/FIXME comments in production code"; exit 1; fi'
        language: system
        pass_filenames: false
        stages: [commit]

      # Validate API documentation
      - id: validate-api-docs
        name: Validate API documentation
        entry: bash -c 'node scripts/validate-api-docs.js'
        language: system
        files: 'src/**/*.ts'
        pass_filenames: false

      # Performance regression check
      - id: performance-check
        name: Performance regression check
        entry: bash -c 'npm run test:performance:check'
        language: system
        pass_filenames: false
        stages: [push]

      # Database migration validation
      - id: validate-migrations
        name: Validate database migrations
        entry: bash -c 'node scripts/validate-migrations.js'
        language: system
        files: 'migrations/*.sql'
        pass_filenames: false

  # Spell checking for documentation
  - repo: https://github.com/crate-ci/typos
    rev: v1.16.26
    hooks:
      - id: typos
        name: Spell check
        files: \.(md|txt|rst)$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        name: Lint Markdown
        args: ['--fix']

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.32.0
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: ['-d', 'relaxed']

  # Docker file linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfile
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

# Configuration for specific hooks
default_language_version:
  node: 18.17.0
  python: python3.11

# Stages where hooks should run
default_stages: [commit, push]

# Fail fast - stop on first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: 3.0.0

# Repository-wide exclusions
exclude: |
  (?x)^(
    .*\.lock$|
    .*\.log$|
    .*/node_modules/.*|
    .*/dist/.*|
    .*/coverage/.*|
    .*\.min\.js$|
    .*\.min\.css$|
    .*/test-results/.*|
    .*/\.git/.*
  )$