services:
  backend:
    container_name: list_cutter_backend
    volumes:
      - user-files:/app/media/
      - ./app:/app
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    environment:
      - COMMIT_INFO_GIT_SHA=${GIT_SHA:-}
      - DJANGO_SETTINGS_MODULE=config.settings.local
    env_file: .env
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      web-db:
        condition: service_healthy
    command: ["sh", "-c", "/app/scripts/setup.sh && python manage.py runserver 0.0.0.0:8000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    container_name: list_cutter_frontend
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-dev
    working_dir: /app/frontend
    command: ["sh", "-c", "npm run dev -- --host"]
    env_file: .env
    volumes:
      - ./app/frontend:/app/frontend
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
      web-db:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web-db:
    image: postgres:17
    container_name: list_cutter_db
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - web-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s

volumes:
  web-db-data:
  user-files:
