name: Cloudflare Preview Deployments

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - '!main'
      - 'feature/**'
      - 'fix/**'
      - 'dev/**'

jobs:
  deploy-preview:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            ./cloudflare/workers/package-lock.json
            ./app/frontend/package-lock.json

      # Deploy Backend Worker Preview
      - name: Install Backend Dependencies
        working-directory: ./cloudflare/workers
        run: npm ci

      - name: Upload Backend Preview Version
        working-directory: ./cloudflare/workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          # Upload new version and create preview
          VERSION_OUTPUT=$(npx wrangler versions upload --message "PR #${{ github.event.pull_request.number || github.sha }}")
          
          # Extract version ID from output
          VERSION_ID=$(echo "$VERSION_OUTPUT" | grep -o 'Version ID: [^ ]*' | cut -d' ' -f3)
          
          # Create preview deployment
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            PREVIEW_TAG="pr-${{ github.event.pull_request.number }}"
          else
            PREVIEW_TAG="branch-$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')"
          fi
          
          # Deploy the version as a preview
          npx wrangler versions deploy $VERSION_ID --percentage 0 --tag $PREVIEW_TAG

      # Deploy Frontend Worker Preview
      - name: Install Frontend Dependencies
        working-directory: ./app/frontend
        run: npm ci

      - name: Build Frontend
        working-directory: ./app/frontend
        run: npm run build

      - name: Upload Frontend Preview Version
        working-directory: ./app/frontend
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          # Upload new version and create preview
          VERSION_OUTPUT=$(npx wrangler versions upload --message "PR #${{ github.event.pull_request.number || github.sha }}")
          
          # Extract version ID from output
          VERSION_ID=$(echo "$VERSION_OUTPUT" | grep -o 'Version ID: [^ ]*' | cut -d' ' -f3)
          
          # Create preview deployment
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            PREVIEW_TAG="pr-${{ github.event.pull_request.number }}"
          else
            PREVIEW_TAG="branch-$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')"
          fi
          
          # Deploy the version as a preview
          npx wrangler versions deploy $VERSION_ID --percentage 0 --tag $PREVIEW_TAG

      # Post deployment URLs as PR comment
      - name: Comment PR with Preview URLs
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const preview_tag = `pr-${{ github.event.pull_request.number }}`;
            const comment = `### ðŸš€ Preview Deployment Ready!
            
            **Frontend Preview**: https://${preview_tag}.cutty-frontend.workers.dev
            **API Preview**: https://${preview_tag}.list-cutter-api.workers.dev
            
            This preview will be automatically updated on new commits.
            
            You can also view all versions in the Cloudflare dashboard:
            - [Frontend Versions](https://dash.cloudflare.com/workers/services/view/cutty-frontend/production)
            - [API Versions](https://dash.cloudflare.com/workers/services/view/list-cutter-api/production)`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

