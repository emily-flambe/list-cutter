name: Build and Publish Image

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Tag to use for the image (latest or dev)'
        required: true
        default: 'latest'
        options:
          - latest
          - dev

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment variables (from workflow inputs)
        id: set_env_vars
        run: |
          if [ "${{ github.event.inputs.image_tag }}" == "dev" ]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST_DEV }}" >> $GITHUB_ENV
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_DEV }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST_PROD }}" >> $GITHUB_ENV
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_PROD }}" >> $GITHUB_ENV
          fi     

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: emilycogsdill
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Generate Docker metadata (backend)
        id: docker-metadata-backend
        uses: docker/metadata-action@v4
        with:
          images: emilycogsdill/list-cutter-backend
          tags: |
            type=sha
            ${{ github.event.inputs.image_tag }}

      - name: Generate Docker metadata (frontend)
        id: docker-metadata-frontend
        uses: docker/metadata-action@v4
        with:
          images: emilycogsdill/list-cutter-frontend
          tags: |
            type=sha
            ${{ github.event.inputs.image_tag }}

      - name: Create .env file
        run: |
          echo "DJANGO_SETTINGS_MODULE=config.settings.${{ env.ENVIRONMENT }}" >> .env
          echo "EMAIL_ENABLED=True" >> .env
          echo "ANALYTICS_ENABLED=False" >> .env
          echo "DD_TRACE_ENABLED=False" >> .env
          echo "ENABLE_DEBUG_TOOLBAR=False" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOST=${{ env.POSTGRES_HOST }}" >> .env

      - name: Build and push frontend image
        uses: docker/build-push-action@v3
        with:
          context: .
          target: frontend-prod
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.docker-metadata-frontend.outputs.tags }}
          labels: ${{ steps.docker-metadata-frontend.outputs.labels }}

      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: .
          target: backend-prod
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.docker-metadata-backend.outputs.tags }}
          labels: ${{ steps.docker-metadata-backend.outputs.labels }}