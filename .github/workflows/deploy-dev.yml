name: Deploy to cutty-dev on Label

on:
  pull_request:
    types: [labeled, synchronize]
  workflow_run:
    workflows: ["Cloudflare Workers CI"]
    types: [completed]

jobs:
  check-label:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
      - name: Check deployment conditions
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            // For workflow_run events, check if CI passed and PR has deploy-dev label
            if (context.eventName === 'workflow_run') {
              if (context.payload.workflow_run.conclusion !== 'success') {
                console.log('CI workflow did not succeed');
                return { 'should-deploy': 'false' };
              }
              
              // Get the PR associated with this workflow run
              const pr = context.payload.workflow_run.pull_requests[0];
              if (!pr) {
                console.log('No PR associated with workflow run');
                return { 'should-deploy': 'false' };
              }
              
              // Check if PR has deploy-dev label
              const { data: pullRequest } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number
              });
              
              const hasLabel = pullRequest.labels.some(label => label.name === 'deploy-dev');
              return { 'should-deploy': hasLabel ? 'true' : 'false' };
            }
            
            // For pull_request events, check if label was added or if PR has label
            if (context.eventName === 'pull_request') {
              const hasLabel = context.payload.action === 'labeled' && context.payload.label.name === 'deploy-dev' ||
                               context.payload.action === 'synchronize' && context.payload.pull_request.labels.some(l => l.name === 'deploy-dev');
              return { 'should-deploy': hasLabel ? 'true' : 'false' };
            }
            
            return { 'should-deploy': 'false' };
          result-encoding: json

  deploy-dev:
    needs: check-label
    if: needs.check-label.outputs.should-deploy == 'true'
    
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies - Frontend
        working-directory: app/frontend
        run: npm ci
      
      - name: Build Frontend
        working-directory: app/frontend
        run: npm run build
        env:
          CI: true
          NODE_ENV: production
      
      - name: Install dependencies - Cloudflare Worker
        working-directory: cloudflare/workers
        run: npm ci
      
      - name: Create GitHub deployment
        id: deployment
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
              environment: 'cutty-dev',
              description: `Deploy PR #${context.payload.pull_request.number} to cutty-dev`,
              auto_merge: false,
              required_contexts: []
            });
            return deployment.data.id;
          result-encoding: string
      
      - name: Deploy to Cloudflare Workers (cutty-dev)
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: cloudflare/workers
          command: deploy
          wranglerVersion: '4.24.3'
      
      - name: Update deployment status - Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'success',
              environment_url: 'https://cutty-dev.emilycogsdill.com',
              description: 'Deployment to cutty-dev succeeded'
            });
      
      - name: Update deployment status - Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'failure',
              description: 'Deployment to cutty-dev failed'
            });
      
      - name: Comment on PR - Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `‚úÖ **Deployment to cutty-dev successful!**
            
            üåê **Environment URL**: https://cutty-dev.emilycogsdill.com
            üìù **Commit**: \`${context.payload.pull_request.head.sha.substring(0, 7)}\`
            üè∑Ô∏è **Triggered by**: \`deploy-dev\` label
            
            The changes in this PR are now live on the development environment.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
      
      - name: Comment on PR - Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `‚ùå **Deployment to cutty-dev failed**
            
            üìù **Commit**: \`${context.payload.pull_request.head.sha.substring(0, 7)}\`
            üè∑Ô∏è **Triggered by**: \`deploy-dev\` label
            
            Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });

  notify-ci-failure:
    runs-on: ubuntu-latest
    needs: check-label
    if: |
      github.event_name == "workflow_run" && 
      github.event.workflow_run.conclusion != 'success' &&
      needs.check-label.outputs.should-deploy == "false"
    
    steps:
      - name: Comment on PR about CI failure
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.workflow_run.pull_requests[0];
            if (!pr) return;
            
            const comment = `‚ö†Ô∏è **Deployment to cutty-dev blocked**
            
            The deployment was not triggered because the CI workflow failed.
            
            üìù **Commit**: \`${context.payload.workflow_run.head_sha.substring(0, 7)}\`
            üè∑Ô∏è **Label**: \`deploy-dev\` is present
            ‚ùå **CI Status**: Failed
            
            Please fix the CI issues before deployment can proceed. Check the [CI workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}) for details.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });
