name: Cloudflare Workers CI

on:
  push:
    branches: [main, feature-cut-mvp]
  pull_request:
    branches: [ main ]
    paths:
      - 'cloudflare/workers/**'
      - '.github/workflows/cloudflare-workers-ci.yml'

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        working-directory: cloudflare/workers
        run: npm ci

      - name: Build project
        working-directory: cloudflare/workers
        run: npm run build

      - name: Run tests
        working-directory: cloudflare/workers
        run: npm test

  puppeteer-e2e:
    name: Puppeteer E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Chrome and system dependencies for Puppeteer
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3-dev \
            libatk-bridge2.0-dev \
            libdrm-dev \
            libgtk-3-dev \
            libgbm-dev
          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
      
      - name: Run Puppeteer tests
        run: npm run test:puppeteer
        env:
          CI: true
      
      - name: Upload debugging artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: puppeteer-debug-artifacts
          path: |
            ./debug-*.png
            ./screenshots/
          retention-days: 7
          if-no-files-found: ignore

  deploy-dev:
    name: Deploy to Development
    needs: [test, puppeteer-e2e]
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'deploy-dev')
    
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies - Frontend
        working-directory: app/frontend
        run: npm ci
      
      - name: Build Frontend
        working-directory: app/frontend
        run: npm run build
        env:
          CI: true
          NODE_ENV: production
          VITE_AI_WORKER_API_KEY: ${{ secrets.AI_WORKER_API_KEY }}
      
      - name: Install dependencies - Cloudflare Worker
        working-directory: cloudflare/workers
        run: npm ci

      - name: Deploy to Cloudflare Workers (Development)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: cloudflare/workers
          command: deploy

